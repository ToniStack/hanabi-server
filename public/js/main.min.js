"use strict";var username;var currentGames={};var roomList={};var createGameOptions={'name':'-','ruleset':'normal',};var inPreGame=false;var gameID=false;var gameState={};function preload(imageList){for(var i=0;i<imageList.length;i++){var image=new Image();image.id='card-'+imageList[i];image.src='/public/img/cards/'+imageList[i]+'.png';$('#card-images').append(image);}}
preload(['b1','b2','b3','b4','b5','g1','g2','g3','g4','g5','y1','y2','y3','y4','y5','r1','r2','r3','r4','r5','p1','p2','p3','p4','p5','k1','k2','k3','k4','k5','m1','m2','m3','m4','m5','back','back-b','back-g','back-y','back-r','back-p','back-k','back-m',]);var canvas=document.getElementById('hanabi-canvas');var context=canvas.getContext('2d');window.addEventListener('resize',hanabiResizeCanvas,false);var socket;try{var webSocketURL;if(window.location.protocol==='https:'){webSocketURL='wss://';}else{webSocketURL='ws://';}
webSocketURL+=window.location.host+'/ws';socket=new WebSocket(webSocketURL);}catch(err){errorShow('Failed to connect to the WebSocket server. Try logging out and back in again.');}
socket.onmessage=function(event){var message=event.data;console.log('Recieved message:',message);var m=message.match(/^(\w+) (.+)$/);var command;var data;if(m){command=m[1];data=JSON.parse(m[2]);}else{console.error('Failed to parse message:',message);}
if(command==='roomList'){for(var i=0;i<data.users.length;i++){roomList[data.room]={};roomList[data.room][data.users[i].name]=data.users[i];}}else if(command==='roomHistory'){for(var i=0;i<data.history.length;i++){if(data.room==='global'){}else{}}}else if(command==='roomJoined'){roomList[data.room][data.user.name]=data.user;if(data.room==='global'){}else{}}else if(command==='roomLeft'){delete roomList[data.room][data.name];if(data.room==='global'){}else{}}else if(command==='gameList'){for(var i=0;i<data.length;i++){currentGames[data[i].id]=data[i];}
lobbyDrawCurrentGames();var inAGame=false;for(var id in currentGames){if(!currentGames.hasOwnProperty(id)){continue;}
for(var i=0;i<currentGames[id].players.length;i++){if(currentGames[id].players[i]===username){gameID=id;if(currentGames[id].status==='open'){gameID=id;lobbyDrawPregame();}else if(currentGames[id].status==='in progress'){gameID=id;}else{errorShow('Failed to parse the status of game #'+id+': '+currentGames[id].status);}
break;}}}}else if(command==='gameCreated'){currentGames[data.id]=data;lobbyDrawCurrentGames();if(data.players[0]===username){gameID=data.id;lobbyDrawPregame();}}else if(command==='gameJoined'){currentGames[data.id].players.push(data.name);lobbyDrawCurrentGames();if(data.name===username){gameID=data.id;}
if(data.id===gameID){lobbyDrawPregame();}}else if(command==='gameLeft'){var currentStatus=currentGames[data.id].status;if(currentGames[data.id].players.indexOf(data.name)!==-1){currentGames[data.id].players.splice(currentGames[data.id].players.indexOf(data.name),1)}else{errorShow('"'+data.name+'" left race #'+data.id+', but they were not in the entrant list.');return;}
if(currentGames[data.id].players.length===0){delete currentGames[data.id];}else{if(currentGames[data.id].captain===data.name){currentGames[data.id].captain=currentGames[data.id].players[0];}}
lobbyDrawCurrentGames();if(data.name===username){gameID=false;if(currentStatus==='open'){lobbyLeavePregame();}else if(currentStatus==='in progress'){showLobby();}else{errorShow('Failed to parse the status of game #'+data.id+': '+currentStatus);}}else if(data.id===gameID){if(currentStatus==='open'){lobbyDrawPregame();}else if(currentStatus==='in progress'){showLobby();}else{errorShow('Failed to parse the status of game #'+data.id+': '+currentStatus);}}}else if(command==='gameSetStatus'){currentGames[data.id].status=data.status;if(data.id===gameID){if(currentGames[data.id].status==='finished'){gameID=false;}else{errorShow('Failed to parse the status of game #'+data.id+': '+currentGames[data.id].status);}}
if(currentGames[data.id]==='finished'){delete currentGames[data.id];}}else if(command==='gameState'){gameState=data;hanabiShow();}else if(command==='actionPlay'){}else if(command==='actionClue'){}else if(command==='actionDiscard'){}else if(command==='username'){username=data.name;}else if(command==='alert'){alertShow(data.msg);}else if(command==='error'){errorShow(data.msg);}else{errorShow('Unrecognized message: '+message);}}
function socketSend(command,json){var message=command+' '+JSON.stringify(json);socket.send(message);console.log('Sent message: '+message);}
var rulesetChooseHTML=' &nbsp;<span class="caret"></span>';$('#ruleset-choose-normal').click(function(e){createGameOptions.ruleset='normal';$('#ruleset-dropdown').html('Normal'+rulesetChooseHTML);});$('#ruleset-choose-black').click(function(e){createGameOptions.ruleset='black';$('#ruleset-dropdown').html('Black'+rulesetChooseHTML);});$('#ruleset-choose-rainbow').click(function(e){createGameOptions.ruleset='rainbow';$('#ruleset-dropdown').html('Rainbow'+rulesetChooseHTML);});$('#create-game-button').click(function(e){createGameOptions.name=$('#game-name').val();socketSend('gameCreate',createGameOptions);$('#create-game-modal').modal('toggle');});$('#create-game-window').bind('keypress',function(e){if(e.keyCode===13){$('#create-game-button').click();}else if(e.keyCode===27){$('#create-game-modal').modal('toggle');}});$('#past-games-button').click(function(e){alert('This isn\'t implemented yet.');});$('#leave-game').click(function(e){var messageObject={id:gameID}
socketSend('gameLeave',messageObject);});function lobbyDrawCurrentGames(){if(Object.keys(currentGames).length===0){$('#current-games').html('<li>No current games.</li>');}else{$('#current-games').html('');for(var id in currentGames){if(!currentGames.hasOwnProperty(id)){continue;}
var insertedHTML='<div class="row vertical-align"><div class="col-xs-2">';insertedHTML+='<button type="button" id="join-game-'+id+'" class="btn btn-sm btn-primary center-block">Join</button>';insertedHTML+='</div><div class="col-xs-10"><strong>Game #'+id;if(currentGames[id].name!=='-'){insertedHTML+=' &mdash; '+currentGames[id].name;}
insertedHTML+='<br />Players:</strong> ';for(var i=0;i<currentGames[id].players.length;i++){insertedHTML+=currentGames[id].players[i]+', ';}
insertedHTML=insertedHTML.substring(0,insertedHTML.length-2);insertedHTML+='</div></div><br />'
$('#current-games').append(insertedHTML);if(currentGames[id].status=='open'){$('#join-game-'+id).unbind();$('#join-game-'+id).click(function(){var m=$(this).attr('id').match(/join-game-(\d+)/);var id;if(m){id=m[1];}else{errorShow('Failed to parse the game ID from the button ID: '+$(this).attr('id'));}
id=parseInt(id);var messageObject={id:id,};socketSend('gameJoin',messageObject);});}else if(currentGames[id].status=='in progress'){$('#join-game-'+id).html('In Progress')
$('#join-game-'+id).unbind();$('#join-game-'+id).fadeTo(0,0.25);$('#join-game-'+id).css('cursor','default');}else{errorShow('Failed to parse the status of game #'+id+':',currentGames[id].status);}}}}
function lobbyDrawPregame(){if(inPreGame===false){inPreGame=true;$('#main-menu').fadeOut(400,function(){$('#pregame').fadeIn();});}
var insertedHTML;if(currentGames[gameID].name==='-'){insertedHTML=gameID;}else{insertedHTML=gameID+' &mdash; '+currentGames[gameID].name;}
$('#pregame-id').html(insertedHTML);$('#pregame-ruleset').html(currentGames[gameID].ruleset.capitalizeFirstLetter())
var insertedHTML='';for(var i=0;i<currentGames[gameID].players.length;i++){var playerIsCaptain=false;if(currentGames[gameID].captain===currentGames[gameID].players[i]){playerIsCaptain=true;}
insertedHTML+='<li>'
if(playerIsCaptain===true){insertedHTML+='<strong>'}
insertedHTML+=currentGames[gameID].players[i]
if(playerIsCaptain===true){insertedHTML+='</strong> (captain)'}
insertedHTML+='</li>';}
$('#pregame-current-players').html(insertedHTML);if(currentGames[gameID].captain===username){$('#start-game').unbind();$('#start-game').click(function(e){var messageObject={id:gameID,};socketSend('gameStart',messageObject);});$('#start-game').fadeTo(400,1);$('#start-game').css('cursor','pointer');}else{$('#start-game').unbind();$('#start-game').fadeTo(400,0.25);$('#start-game').css('cursor','default');}}
function lobbyLeavePregame(){inPreGame=false;$('#pregame').fadeOut(400,function(){$('#main-menu').fadeIn();});}
function lobbyShow(){gameID=false;$('#hanabi').fadeOut(400,function(){$('#lobby').fadeIn();});}
function hanabiShow(){console.log('Started game #'+gameID+'.');$('#pregame').fadeOut();$('#main-menu').fadeIn();$('#lobby').fadeOut(400,function(){$('#hanabi').fadeIn();});hanabiResizeCanvas();hanabiDraw();}
function hanabiResizeCanvas(){var windowWidth=window.innerWidth;var windowHeight=window.innerHeight;var canvasWidth,canvasHeight;if(windowWidth<640)windowWidth=640;if(windowHeight<360)windowHeight=360;var ratio=1.777;if(windowWidth<windowHeight*ratio){canvasWidth=windowWidth;canvasHeight=windowWidth/ratio;}else{canvasHeight=windowHeight;canvasWidth=windowHeight*ratio;}
canvasWidth=Math.floor(canvasWidth);canvasHeight=Math.floor(canvasHeight);if(canvasWidth>0.98*windowWidth)canvasWidth=windowWidth;if(canvasHeight>0.98*windowHeight)canvasHeight=windowHeight;canvas.width=canvasWidth;canvas.height=canvasHeight;hanabiDraw();}
function hanabiDraw(){var win_w=canvas.width;var win_h=canvas.height;var x,y,width,height,offset,radius;var suits=['b','g','y','r','p'];if(gameState.ruleset=='black'){suits.push('k')}else if(gameState.ruleset=='rainbow'){suits.push('m')}
if(suits.length==5){y=.05;width=.075;height=.189;offset=0;radius=.006;}else if(suits.length==6){y=.04;width=.06;height=.151;offset=.019;radius=.004;}
for(var i=0;i<suits.length;i++){var image=document.getElementById('card-back-'+suits[i]);context.drawImage(image,(.183+(width+.015)*i)*win_w,(.345+offset)*win_h,width*win_w,height*win_h);}
var ourPlayerNum;for(var i=0;i<gameState.hands.length;i++){if(gameState.hands[i].name===username){ourPlayerNum=gameState.hands[i].playerNum-1;break;}}
console.log('ourPlayerNum:',ourPlayerNum);var hand_pos={2:[{x:.19,y:.77,w:.42,h:.189,rot:0},{x:.19,y:.01,w:.42,h:.189,rot:0}],3:[{x:.19,y:.77,w:.42,h:.189,rot:0},{x:.01,y:.71,w:.41,h:.189,rot:-78},{x:.705,y:0,w:.41,h:.189,rot:78}],4:[{x:.23,y:.77,w:.34,h:.189,rot:0},{x:.015,y:.7,w:.34,h:.189,rot:-78},{x:.23,y:.01,w:.34,h:.189,rot:0},{x:.715,y:.095,w:.34,h:.189,rot:78}],5:[{x:.23,y:.77,w:.34,h:.189,rot:0},{x:.03,y:.77,w:.301,h:.18,rot:-90},{x:.025,y:.009,w:.34,h:.189,rot:0},{x:.445,y:.009,w:.34,h:.189,rot:0},{x:.77,y:.22,w:.301,h:.18,rot:90}]};var nump=gameState.hands.length;for(var i=0;i<nump;i++){var j=i-ourPlayerNum;if(j<0){j+=nump;}
console.log('j:',j);var image=document.getElementById('back');}}
function alertShow(message){BootstrapDialog.show({title:'Alert',message:message,type:'type-warning',buttons:[{label:'Ok',action:function(dialog){dialog.close();},}],});}
function errorShow(message){BootstrapDialog.show({title:'Error',message:message,type:'type-danger',buttons:[{label:'Logout',action:function(dialog){window.location.replace('/logout');},}],});}
$('.modal').on('shown.bs.modal',function(){$(this).find('[autofocus]').focus();});String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1);}